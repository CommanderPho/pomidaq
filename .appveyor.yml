image: Visual Studio 2017

environment:
  matrix:
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    GENERATOR: Ninja
    VCVARS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"
    PLATFORM:
    VER_SUFFIX: win64
    QT_DIR: C:\Qt\5.12\msvc2017_64
    OPENCV_DIR: C:\tools\opencv\build\x64\vc15\lib
    BOOST_DIR: C:\Libraries\boost_1_69_0
    FFMPEG_DIR: C:\projects\ffmpeg-root

init:
- call "%QT_DIR%\bin\qtenv2.bat"
- set PATH=C:\msys64\bin;C:\msys64\usr\bin;C:\Qt\Tools\QtCreator\bin;C:\Program Files\CMake\bin;%PATH%
- call "%VCVARS%" %PLATFORM%
- cd /D "%APPVEYOR_BUILD_FOLDER%"

install:
- choco upgrade cmake ninja
- choco install opencv --version 4.1.0
- ps: |
      mkdir -p $env:FFMPEG_DIR
      cd $env:FFMPEG_DIR
      bash -c "wget -q -O ffmpeg.zip https://ffmpeg.zeranoe.com/builds/win64/dev/ffmpeg-4.1.1-win64-dev.zip"
      Expand-Archive ffmpeg.zip -DestinationPath .
- cd /D "%APPVEYOR_BUILD_FOLDER%"

before_build:
- if defined APPVEYOR_REPO_TAG_NAME (set VERSION=%APPVEYOR_REPO_TAG_NAME%) else for /F %%I in ('git rev-list --count HEAD') do set VERSION=git%%I
- set DEPLOY_DIR=PoMiDAQ-%VERSION%
- mkdir build
- cd build
- cmake -B.
    -S..
    -G "%GENERATOR%"
    -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX="%DEPLOY_DIR%"
    -DOpenCV_DIR="%OPENCV_DIR%"
    -DFFmpegPath="%FFMPEG_DIR%/ffmpeg-4.1.1-win64-dev/include"
    -DBoost_COMPILER="-vc141"
    -DBOOST_ROOT="%BOOST_DIR%" -DBOOST_LIBRARYDIR="%BOOST_DIR%\lib64-msvc-14.1"
- cd ..

build_script:
- cmake --build build

after_build:
- cmake --build build --target install
- cd build
- ps: |
      bash -c "wget -q -O ffmpeg.zip https://ffmpeg.zeranoe.com/builds/win64/shared/ffmpeg-4.1.1-win64-shared.zip"
      Expand-Archive ffmpeg.zip -DestinationPath ffmpeg-bin
      cp .\ffmpeg-bin\*\bin\*.dll $env:DEPLOY_DIR\bin\

      cp $env:OPENCV_DIR\..\bin\opencv_world[0-9][0-9][0-9].dll $env:DEPLOY_DIR\bin\
      windeployqt $env:DEPLOY_DIR\bin\pomidaq.exe

      cp $env:APPVEYOR_BUILD_FOLDER\LICENSE $env:DEPLOY_DIR\LICENSE.txt
      cp $env:APPVEYOR_BUILD_FOLDER\README.md $env:DEPLOY_DIR
      cp $env:APPVEYOR_BUILD_FOLDER\contrib\bundle-license.md $env:DEPLOY_DIR
- 7z a pomidaq-%VERSION%-%VER_SUFFIX%.zip "%DEPLOY_DIR%"
- cd ..

test: off

artifacts:
- path: build\pomidaq*.zip
